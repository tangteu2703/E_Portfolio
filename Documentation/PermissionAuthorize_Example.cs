// =====================================================
// V√ç D·ª§ S·ª¨ D·ª§NG PERMISSIONAUTHORIZE ATTRIBUTE
// =====================================================

using E_API.Filter;
using Microsoft.AspNetCore.Mvc;

namespace E_API.Controllers.Examples
{
    [Route("api/[controller]")]
    [ApiController]
    public class UserManagementController : ControllerBase
    {
        // 1Ô∏è‚É£ XEM DANH S√ÅCH USER - Function ID: 1
        [Authorize]
        [PermissionAuthorize(1)] // Ch·ªâ c·∫ßn ki·ªÉm tra function_id = 1
        [HttpGet("users")]
        public async Task<IActionResult> GetAllUsers()
        {
            // Logic l·∫•y danh s√°ch user
            return Ok(new { users = "danh s√°ch t·∫•t c·∫£ users" });
        }

        // 2Ô∏è‚É£ T·∫†O USER M·ªöI - Function ID: 2
        [Authorize]
        [PermissionAuthorize(2)] // Ch·ªâ c·∫ßn ki·ªÉm tra function_id = 2
        [HttpPost("users")]
        public async Task<IActionResult> CreateUser([FromBody] CreateUserRequest request)
        {
            // Logic t·∫°o user m·ªõi
            return Ok(new { message = "User created successfully" });
        }

        // 3Ô∏è‚É£ C·∫¨P NH·∫¨T USER - Function ID: 3
        [Authorize]
        [PermissionAuthorize(3)] // Ch·ªâ c·∫ßn ki·ªÉm tra function_id = 3
        [HttpPut("users/{userId}")]
        public async Task<IActionResult> UpdateUser(string userId, [FromBody] UpdateUserRequest request)
        {
            // Logic c·∫≠p nh·∫≠t user
            return Ok(new { message = $"User {userId} updated successfully" });
        }

        // 4Ô∏è‚É£ V√î HI·ªÜU H√ìA USER - Function ID: 4
        [Authorize]
        [PermissionAuthorize(4)] // Ch·ªâ c·∫ßn ki·ªÉm tra function_id = 4
        [HttpDelete("users/{userId}")]
        public async Task<IActionResult> DisableUser(string userId)
        {
            // Logic v√¥ hi·ªáu h√≥a user
            return Ok(new { message = $"User {userId} disabled successfully" });
        }

        // 5Ô∏è‚É£ IMPORT EXCEL - Function ID: 5
        [Authorize]
        [PermissionAuthorize(5)] // Ch·ªâ c·∫ßn ki·ªÉm tra function_id = 5
        [HttpPost("users/import-excel")]
        public async Task<IActionResult> ImportUsersFromExcel(IFormFile file)
        {
            // Logic import t·ª´ Excel
            return Ok(new { message = "Users imported successfully" });
        }

        // 6Ô∏è‚É£ EXPORT EXCEL - Function ID: 6
        [Authorize]
        [PermissionAuthorize(6)] // Ch·ªâ c·∫ßn ki·ªÉm tra function_id = 6
        [HttpPost("users/export-excel")]
        public async Task<IActionResult> ExportUsersToExcel()
        {
            // Logic export ra Excel
            return Ok(new { downloadUrl = "/files/users-export.xlsx" });
        }
    }

    // V√≠ d·ª• v·ªõi Worksheet Management (Menu kh√°c)
    [Route("api/[controller]")]
    [ApiController]
    public class WorkSheetController : ControllerBase
    {
        // Xem worksheet - c√≥ th·ªÉ l√† function_id kh√°c trong menu worksheet
        [Authorize]
        [PermissionAuthorize(10)] // Gi·∫£ s·ª≠ function_id = 10 cho worksheet
        [HttpGet("worksheets")]
        public async Task<IActionResult> GetWorkSheets()
        {
            return Ok(new { worksheets = "danh s√°ch worksheets" });
        }

        // T·∫°o worksheet m·ªõi
        [Authorize]
        [PermissionAuthorize(11)] // function_id = 11
        [HttpPost("worksheets")]
        public async Task<IActionResult> CreateWorkSheet()
        {
            return Ok(new { message = "WorkSheet created" });
        }
    }
}

/*
üìã C·∫§U TR√öC PH√ÇN QUY·ªÄN TRONG DATABASE:

user_code | role_id | menu_id | function_id | function_name
----------|---------|---------|-------------|--------------
NV001     | 1       | 1       | 1           | Xem danh s√°ch user
NV001     | 1       | 1       | 2           | T·∫°o user m·ªõi
NV001     | 1       | 1       | 3           | C·∫≠p nh·∫≠t user
NV002     | 2       | 1       | 1           | Ch·ªâ xem danh s√°ch user
NV002     | 2       | 2       | 10          | Xem worksheet

üîë JWT TOKEN S·∫º CH·ª®A:
{
  "permission": [
    "perm_1_1",  // C√≥ quy·ªÅn xem user
    "perm_1_2",  // C√≥ quy·ªÅn t·∫°o user
    "perm_1_3"   // C√≥ quy·ªÅn c·∫≠p nh·∫≠t user
  ]
}

‚ö° KI·ªÇM TRA QUY·ªÄN:
- [PermissionAuthorize(1)] ‚Üí Ki·ªÉm tra c√≥ "perm_*_1" trong token kh√¥ng?
- [PermissionAuthorize(2)] ‚Üí Ki·ªÉm tra c√≥ "perm_*_2" trong token kh√¥ng?
- N·∫øu c√≥ ‚Üí Th·ª±c hi·ªán action
- N·∫øu kh√¥ng ‚Üí Tr·∫£ v·ªÅ 401 Unauthorized

üöÄ PERFORMANCE:
- Ki·ªÉm tra t·ª´ JWT token: ~1ms
- Kh√¥ng c·∫ßn truy v·∫•n database m·ªói l·∫ßn
- Scale t·ªët v·ªõi nhi·ªÅu user ƒë·ªìng th·ªùi
*/
